//mixins

//prefixes
@prefixes: webkit moz ms o;

.prefix(@property, @value) {
  .prefix(@property, @value, @prefixes);
}

.prefix(@property, @value, @prefixes) {
  .prefix(@property, @value, @prefixes, 1);
  @{property}: @value;
}

.prefix(@property, @value, @prefixes, @index) when (@index > 0) and (length(@prefixes) >= @index) {
  @prefix: extract(@prefixes, @index);
  -@{prefix}-@{property}: @value;
  .prefix(@property, @value, @prefixes, @index + 1);
}

//cross browser setup for transitions this should use prefixes please improve if you can see how
.transition(@transition-property, @transition-time, @method) {
  -webkit-transition: @transition-property @transition-time @method;
  -moz-transition: @transition-property @transition-time @method;
  -ms-transition: @transition-property @transition-time @method;
  -o-transition: @transition-property @transition-time @method;
  transition: @transition-property @transition-time @method;
}

//provided transparency fallback
.transparent_class(@value) {
  @test: @value*100;
  /* IE 8 */
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=@{test})";
  /* IE 5-7 */
  filter: alpha(opacity=@test);
  /* Netscape */
  -moz-opacity: @value;
  /* Safari 1.x */
  -khtml-opacity: @value;
  /* Good browsers */
  opacity: @value;
}

//border rounding
.border-radius(@radius: @border-radius) {
  .prefix(border-radius, @radius, webkit moz);
}

.linear-gradient(@direction, @start, @rest, @fallback:@rest...) {
  background: @fallback;
  background: -webkit-linear-gradient(@direction, @start, @rest);
  background: -moz-linear-gradient(@direction, @start, @rest);
  background: -ms-linear-gradient(@direction, @start, @rest);
  background: -o-linear-gradient(@direction, @start, @rest);
  background: linear-gradient(@direction, @start, @rest);
}
